{"ast":null,"code":"import { GEMINI_API_URL } from '../config';\nexport const generateContent = async data => {\n  try {\n    const response = await fetch(GEMINI_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error fetching data from Gemini API:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["GEMINI_API_URL","generateContent","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","error","console"],"sources":["C:/design/KotoGram/src/api/geminiApi.js"],"sourcesContent":["import { GEMINI_API_URL } from '../config';\r\n\r\nexport const generateContent = async (data) => {\r\n    try {\r\n        const response = await fetch(GEMINI_API_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        console.error('Error fetching data from Gemini API:', error);\r\n        throw error;\r\n    }\r\n}; "],"mappings":"AAAA,SAASA,cAAc,QAAQ,WAAW;AAE1C,OAAO,MAAMC,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,cAAc,EAAE;MACzCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IAEA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}